( function( $ ) {

	var clc = wp.customize.ContentLayoutControl;

	/**
	 * Model class for the Gallery component
	 *
	 * @augments Backbone.Model
	 * @since 0.1
	 */
	clc.Models.components.gallery = clc.Models.Component.extend({
		defaults: function() {
			return {
				name:           '',
				description:    '',
				type:           'gallery',
				images:         [],
				columns:        5,
				size:           'medium',
				title:          '',
				selector_id: 	'',
				order:          0
			};
		}
	});

} )( jQuery );

( function( $ ) {

	var clc = wp.customize.ContentLayoutControl;

	/**
	 * Model class for the Components Content Block component
	 *
	 * @augments Backbone.Model
	 * @since 1.0.0
	 */
	clc.Models.components['classic-content-block'] = clc.Models.components['content-block'].extend({
		defaults: function() {
			return {
				name:           '',
				description:    '',
				type:           'classic-content-block',
				image:          0,
				image_position: 'left',
				title_line_one: '',
				title:          '',
				content:        '',
				links:          [],
				selector_id: 	'',
				order:          0
			};
		}
	});

} )( jQuery );

( function( $ ) {

	var clc = wp.customize.ContentLayoutControl;

	/**
	 * Model class for the Components Content Block component
	 *
	 * @augments Backbone.Model
	 * @since 1.0.0
	 */
	clc.Models.components['classic-content-block-two'] = clc.Models.components['content-block'].extend({
		defaults: function() {
			return {
				name:           '',
				description:    '',
				type:           'classic-content-block-two',
				image:          0,
				image_position: 'left',
				title_line_one: '',
				title:          '',
				content:        '',
				links:          [],
				selector_id: 	'',
				order:          0
			};
		}
	});

} )( jQuery );

( function( $ ) {

	var clc = wp.customize.ContentLayoutControl;

	/**
	 * Model class for the Components Hero Block component
	 *
	 * @augments clc.Models.components['content-block']
	 * @augments Backbone.Model
	 * @since 1.0.0
	 */
	clc.Models.components['classic-hero-block'] = clc.Models.components['content-block'].extend({
		defaults: function() {
			return {
				name:               '',
				description:        '',
				type:               'classic-hero-block',
				image:              0,
				image_transparency: 0,
				title_line_one:     '',
				title:              '',
				links:              [],
				contact:            '',
				selector_id: 		'',
				order:              0
			};
		}
	});

} )( jQuery );

( function( $ ) {

	var clc = wp.customize.ContentLayoutControl;

	/**
	 * Model class for the Components Hero Block component
	 *
	 * @augments clc.Models.components['content-block']
	 * @augments Backbone.Model
	 * @since 1.0.0
	 */
	clc.Models.components['classic-cta-banner'] = clc.Models.components['content-block'].extend({
		defaults: function() {
			return {
				name:               '',
				description:        '',
				type:               'classic-cta-banner',
				image:              0,
				image_transparency: 0,
				title_line_one:     '',
				title:              '',
				links:              [],
				order:              0
			};
		}
	});

} )( jQuery );

( function( $ ) {

	var clc = wp.customize.ContentLayoutControl;

	/**
	 * Model class for the Components Hero Block component
	 *
	 * @augments clc.Models.components['content-block']
	 * @augments Backbone.Model
	 * @since 1.0.0
	 */
	clc.Models.components['classic-cta-banner-two'] = clc.Models.components['content-block'].extend({
		defaults: function() {
			return {
				name:               '',
				description:        '',
				type:               'classic-cta-banner-two',
				image:              0,
				image_transparency: 0,
				title_line_one:     '',
				title:              '',
				links:              [],
				order:              0
			};
		}
	});

} )( jQuery );

( function( $ ) {

	var clc = wp.customize.ContentLayoutControl;

	/**
	 * Model class for the Recent posts component
	 *
	 * @augments Backbone.Model
	 * @since 0.1
	 */
	clc.Models.components['classic-recent-posts'] = clc.Models.Component.extend({
		defaults: function() {
			return {
				name:           '',
				description:    '',
				number:         3,
				columns:        4,
				title:          '',
				show_date:      0,
				type:           'classic-recent-posts',
				order:          0
			};
		}
	});

} )( jQuery );

( function( $ ) {

	var clc = wp.customize.ContentLayoutControl;

	/**
	 * Model class for the Recent posts component
	 *
	 * @augments Backbone.Model
	 * @since 0.1
	 */
	clc.Models.components['classic-commerce-products'] = clc.Models.Component.extend({
		defaults: function() {
			return {
				name:           '',
				description:    '',
				number:         3,
				columns:        3,
				title:          '',
				type:           'classic-commerce-products',
				order:          0
			};
		}
	});

} )( jQuery );

( function( $ ) {

	var clc = wp.customize.ContentLayoutControl;

	/**
	 * Model class for the Recent posts component
	 *
	 * @augments Backbone.Model
	 * @since 0.1
	 */
	clc.Models.components['classic-cc-on-sale'] = clc.Models.Component.extend({
		defaults: function() {
			return {
				name:           '',
				description:    '',
				number:         3,
				columns:        3,
				title:          '',
				type:           'classic-cc-on-sale',
				order:          0
			};
		}
	});

} )( jQuery );

( function( $ ) {

	var clc = wp.customize.ContentLayoutControl;

	/**
	 * View class for the Content Block layout
	 *
	 * @augments clc.Views.component_previews['content-block']
	 * @augments wp.customize.ContentLayoutControl.Views.BaseComponentPreview
	 * @augments wp.Backbone.View
	 * @since 1.0.0
	 */
	clc.Views.component_previews['classic-content-block'] = clc.Views.component_previews['content-block'].extend({
		/**
		 * Handle individual settings updates
		 *
		 * @since 1.0.0
		 */
		settingChanged: function( data ) {
			if ( data.setting == 'title' ) {
				this.$el.find( '.' + data.setting ).html( this.wrapFirstWord( data.val ) );
			} else if ( data.setting == 'image-position' ) {
				this.updateImagePosition( data.val );
			} else {
				this.$el.find( '.' + data.setting ).html( data.val );
			}
		},

		/**
		 * Wrap the first word of a string in a span for styling
		 *
		 * @since 1.0.0
		 */
		wrapFirstWord: function( string ) {
			string = string.split( ' ' );
			var first = string.splice( 0, 1 );
			return '<span class="classic-first-word">' + first[0] + '</span>' + string.join( ' ' );
		}
	});

} )( jQuery );

( function( $ ) {

	var clc = wp.customize.ContentLayoutControl;

	/**
	 * View class for the Content Block Two layout
	 *
	 * @augments clc.Views.component_previews['content-block']
	 * @augments wp.customize.ContentLayoutControl.Views.BaseComponentPreview
	 * @augments wp.Backbone.View
	 * @since 1.0.0
	 */
	clc.Views.component_previews['classic-content-block-two'] = clc.Views.component_previews['content-block'].extend({
		/**
		 * Handle individual settings updates
		 *
		 * @since 1.0.0
		 */
		settingChanged: function( data ) {
			if ( data.setting == 'title' ) {
				this.$el.find( '.' + data.setting ).html( this.wrapFirstWord( data.val ) );
			} else if ( data.setting == 'image-position' ) {
				this.updateImagePosition( data.val );
			} else {
				this.$el.find( '.' + data.setting ).html( data.val );
			}
		},

		/**
		 * Wrap the first word of a string in a span for styling
		 *
		 * @since 1.0.0
		 */
		wrapFirstWord: function( string ) {
			string = string.split( ' ' );
			var first = string.splice( 0, 1 );
			return '<span class="classic-first-word">' + first[0] + '</span>' + string.join( ' ' );
		}
	});

} )( jQuery );

( function( $ ) {

	var clc = wp.customize.ContentLayoutControl;

	/**
	 * View class for the Hero Block layout
	 *
	 * @augments clc.Views.component_previews['components-content-block']
	 * @augments wp.customize.ContentLayoutControl.Views.BaseComponentPreview
	 * @augments wp.Backbone.View
	 * @since 1.0.0
	 */
	clc.Views.component_previews['classic-hero-block'] = clc.Views.component_previews['content-block'].extend({
		/**
		 * Handle individual settings updates
		 *
		 * @since 1.0.0
		 */
		settingChanged: function( data ) {
			if ( data.setting == 'image_transparency' ) {
				this.updateBackgroundTransparency( data.val );
			} else if ( data.setting == 'title' ) {
				this.$el.find( '.' + data.setting ).html( this.wrapFirstWord( data.val ) );
			} else {
				this.$el.find( '.' + data.setting ).html( data.val );
			}
		},

		/**
		 * Update the background image transparency
		 *
		 * @since 1.0.0
		 */
		updateBackgroundTransparency: function( val ) {
			var bg = this.$el.find( '.background' );
			if ( !bg.length ) {
				return;
			}

			val = 100 - parseInt( val, 10 );
			if ( val === 0 ) {
				bg.css( 'opacity', 0 );
			} else {
				bg.css( 'opacity', val / 100 );
			}
		}

	});

} )( jQuery );

( function( $ ) {

	var clc = wp.customize.ContentLayoutControl;

	/**
	 * View class for the CTA Banner Block layout
	 *
	 * @augments clc.Views.component_previews['components-content-block']
	 * @augments wp.customize.ContentLayoutControl.Views.BaseComponentPreview
	 * @augments wp.Backbone.View
	 * @since 1.0.0
	 */
	clc.Views.component_previews['classic-cta-banner'] = clc.Views.component_previews['classic-content-block'].extend({
		/**
		 * Handle individual settings updates
		 *
		 * @since 1.0.0
		 */
		settingChanged: function( data ) {
			if ( data.setting == 'image_transparency' ) {
				this.updateBackgroundTransparency( data.val );
			} else if ( data.setting == 'title' ) {
				this.$el.find( '.' + data.setting ).html( this.wrapFirstWord( data.val ) );
			} else {
				this.$el.find( '.' + data.setting ).html( data.val );
			}
		},

		/**
		 * Update the background image transparency
		 *
		 * @since 1.0.0
		 */
		updateBackgroundTransparency: function( val ) {
			var bg = this.$el.find( '.background' );
			if ( !bg.length ) {
				return;
			}

			val = 100 - parseInt( val, 10 );
			if ( val === 0 ) {
				bg.css( 'opacity', 0 );
			} else {
				bg.css( 'opacity', val / 100 );
			}
		}

	});

} )( jQuery );

( function( $ ) {

	var clc = wp.customize.ContentLayoutControl;

	/**
	 * View class for the CTA Banner Block layout
	 *
	 * @augments clc.Views.component_previews['components-content-block']
	 * @augments wp.customize.ContentLayoutControl.Views.BaseComponentPreview
	 * @augments wp.Backbone.View
	 * @since 1.0.0
	 */
	clc.Views.component_previews['classic-cta-banner-two'] = clc.Views.component_previews['classic-content-block'].extend({
		/**
		 * Handle individual settings updates
		 *
		 * @since 1.0.0
		 */
		settingChanged: function( data ) {
			if ( data.setting == 'image_transparency' ) {
				this.updateBackgroundTransparency( data.val );
			} else if ( data.setting == 'title' ) {
				this.$el.find( '.' + data.setting ).html( this.wrapFirstWord( data.val ) );
			} else {
				this.$el.find( '.' + data.setting ).html( data.val );
			}
		},

		/**
		 * Update the background image transparency
		 *
		 * @since 1.0.0
		 */
		updateBackgroundTransparency: function( val ) {
			var bg = this.$el.find( '.background' );
			if ( !bg.length ) {
				return;
			}

			val = 100 - parseInt( val, 10 );
			if ( val === 0 ) {
				bg.css( 'opacity', 0 );
			} else {
				bg.css( 'opacity', val / 100 );
			}
		}

	});

} )( jQuery );


( function( $ ) {

	var clc = wp.customize.ContentLayoutControl;

	/**
	 * View class for the Gallery layout
	 *
	 * @augments wp.customize.ContentLayoutControl.Views.BaseComponentPreview
	 * @augments wp.Backbone.View
	 * @since 0.1
	 */
	clc.Views.component_previews.gallery = clc.Views.BaseComponentPreview.extend();

} )( jQuery );

( function( $ ) {

	var clc = wp.customize.ContentLayoutControl;

	/**
	 * View class for the Recent Posts layout
	 *
	 * @augments wp.customize.ContentLayoutControl.Views.component_previews.posts
	 * @augments wp.customize.ContentLayoutControl.Views.BaseComponentPreview
	 * @augments wp.Backbone.View
	 * @since 0.1
	 */
	clc.Views.component_previews['classic-recent-posts'] = clc.Views.component_previews.posts.extend({
		/**
		 * Initialize
		 *
		 * @since 0.1
		 */
		initialize: function( options ) {
			this.listenTo( this.model, 'change', this.load );
			_.bindAll( this, 'settingChanged' );
			wp.customize.preview.bind( 'component-setting-changed-' + this.model.get( 'id' ) +'.clc', this.settingChanged );
		},

		/**
		 * Update the text settings immediately in the browser
		 *
		 * @since 0.1
		 */
		settingChanged: function( data ) {
			if ( data.setting == 'number' || data.setting == 'show_date' ) {
				this.load();
			} else {
				this.$el.find( '.' + data.setting ).html( data.val );
			}
		},
	});

} )( jQuery );

( function( $ ) {

	var clc = wp.customize.ContentLayoutControl;

	/**
	 * View class for the On Sale Products layout
	 *
	 * @augments wp.customize.ContentLayoutControl.Views.component_previews.posts
	 * @augments wp.customize.ContentLayoutControl.Views.BaseComponentPreview
	 * @augments wp.Backbone.View
	 * @since 0.1
	 */
	clc.Views.component_previews['classic-commerce-products'] = clc.Views.component_previews.posts.extend({
		/**
		 * Initialize
		 *
		 * @since 0.1
		 */
		initialize: function( options ) {
			this.listenTo( this.model, 'change', this.load );
			_.bindAll( this, 'settingChanged' );
			wp.customize.preview.bind( 'component-setting-changed-' + this.model.get( 'id' ) +'.clc', this.settingChanged );
		},

		/**
		 * Update the text settings immediately in the browser
		 *
		 * @since 0.1
		 */
		settingChanged: function( data ) {
			if ( data.setting == 'number' || data.setting == 'columns' ) {
				this.load();
			} else {
				this.$el.find( '.' + data.setting ).html( data.val );
			}
		},
	});

} )( jQuery );


( function( $ ) {

	var clc = wp.customize.ContentLayoutControl;

	/**
	 * View class for the On Sale Products layout
	 *
	 * @augments wp.customize.ContentLayoutControl.Views.component_previews.posts
	 * @augments wp.customize.ContentLayoutControl.Views.BaseComponentPreview
	 * @augments wp.Backbone.View
	 * @since 0.1
	 */
	clc.Views.component_previews['classic-cc-on-sale'] = clc.Views.component_previews.posts.extend({
		/**
		 * Initialize
		 *
		 * @since 0.1
		 */
		initialize: function( options ) {
			this.listenTo( this.model, 'change', this.load );
			_.bindAll( this, 'settingChanged' );
			wp.customize.preview.bind( 'component-setting-changed-' + this.model.get( 'id' ) +'.clc', this.settingChanged );
		},

		/**
		 * Update the text settings immediately in the browser
		 *
		 * @since 0.1
		 */
		settingChanged: function( data ) {
			if ( data.setting == 'number' || data.setting == 'columns' ) {
				this.load();
			} else {
				this.$el.find( '.' + data.setting ).html( data.val );
			}
		},
	});

} )( jQuery );

var Components_Customizer_Ajax;
( function( $ ) {
	/**
	 * Wrapper for $.post() which handles default request parameters and the
	 * dislay of any errors.
	 *
	 * @params object Key/value pairs of data to send with request. Must include
	 *  a `route`. A function assigned to the `callback` key will be executed if
	 *  the response is successful.
	 * @since 1.0.0
	 */
	Components_Customizer_Ajax = function( params, callback ) {
		/**
		 * Selector cache to reduce DOM lookups
		 *
		 * @since 1.0.0
		 */
		var cache = Components_Selector_Cache;
		
		/**
		 * Function to execute ajax requests
		 *
		 * @since 1.0.0
		 */
		var ajax = Components_Customizer_Ajax;

		/**
		 * Display an error message
		 *
		 * @since 1.0.0
		 */
		function display_error( r ) {
			if ( typeof r.data == 'undefined' || typeof r.data.error == 'undefined' || typeof r.data.msg == 'undefined' ) {
				alert( components_theme_customizer.strings.unknown_error );
			} else {
				alert( r.data.msg );
			}
		}

		/**
		 * Whether or not a loading spinner has been requested and can be added
		 *
		 * @since 1.0.0
		 */
		function needs_spinner() {
			if ( typeof params.spinner !== 'undefined' && typeof params.route !== 'undefined' ) {
				return cache.get( params.route, params.spinner ).length;
			}

			return false;
		}

		/**
		 * Attach a loading spinner
		 *
		 * @since 1.0.0
		 */
		function start_spinner() {
			if ( !needs_spinner() ) {
				return;
			}

			cache.get( params.route, params.spinner ).addClass( 'classic-loading-spinner' );
			cache.clear( params.route );
		}

		/**
		 * Stop the loading spinner
		 *
		 * @since 1.0.0
		 */
		function stop_spinner( selector ) {
			if ( !needs_spinner() ) {
				return;
			}

			cache.get( params.route, params.spinner ).removeClass( 'classic-loading-spinner' );
			cache.clear( params.route );
		}

		params.action = 'classic-customizer';
		params.nonce = components_theme_customizer.nonce;

		start_spinner();

		$.post(
			wp.ajax.settings.url,
			$.param( params ),
			function( r ) {
				stop_spinner();
				if ( r.success ) {
					if ( typeof r.data === 'undefined' ) {
						display_error( r );
					}

					if ( typeof callback !== 'undefined' ) {
						callback.call( this, r, params );
					}
				} else {
					display_error( r );
				}
			}
		);
	};
} )( jQuery );

var Components_Preview_Trigger;
( function( $ ) {
	/**
	 * Create buttons which can appear in the customizer window to open
	 * specific controls.
	 *
	 * @param string id A unique id for this trigger
	 * @param jQuery container A jQuery object pointing to the element within
	 *  the preview to which this trigger should be attached.
	 * @param string control_id The control id which this trigger should open
	 * @since 1.0.0
	 */
	Components_Preview_Trigger = function( id, container, control_id ) {

		if ( !container.length || !wp || !wp.customize.preview ) {
			return;
		}

		id = 'classic-preview-trigger-' + id;

		container.addClass( 'classic-preview-trigger-container' );
		container.append( '<button href="#" id="' + id + '" class="classic-preview-trigger"></button>' );

		$( '#' + id ).on( 'click', function(e) {
			e.preventDefault();
			e.stopPropagation();

			wp.customize.preview.send( 'customizer-focus.classic', { control_id: control_id } );
		});

		return true;
	};
} )( jQuery );
